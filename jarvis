
    
    print(f"💬 인식된 명령: {command_raw}")

    # --- 모든 판단을 Gemini에게 맡깁니다. ---
    final_command_key = None
    available_functions = list(COMMANDS.keys())
    
    function_descriptions = []
    for key, info in COMMANDS.items():
        description = f"- '{key}' (관련 표현: {', '.join(info.get('aliases', []))})"
        function_descriptions.append(description)
    
    intent_prompt = (f"당신은 사용자의 자연어 명령에서 핵심 의도를 파악하는 AI 두뇌입니다. 아래 '기능 설명'을 참고하여, 주어진 '사용자 명령'과 가장 일치하는 기능의 이름(key) '하나'만 정확히 출력해주세요.\n\n## 기능 설명:\n" + "\n".join(function_descriptions) + f"\n\n## 지시:\n적합한 기능이 있다면 그 기능의 이름만, 없다면 'NULL'만 출력하세요.\n\n## 사용자 명령:\n\"{command_raw}\"")
    
    gemini_suggestion = ask_gemini(intent_prompt)
    
    if gemini_suggestion != "NULL" and gemini_suggestion in available_functions:
        final_command_key = gemini_suggestion
    
    result = ""
    if final_command_key:
        command_info = COMMANDS.get(final_command_key, {})
        action_type = command_info.get('action_type')
        if action_type == 'fetch_and_report':
            target_name = command_info.get('target_name')
            if target_name == '현재 날씨': result = get_weather_forecast()
            elif target_name == '현재 시간': result = get_current_time()
        elif action_type == 'special':
            result = get_response_text(command_info)
            pyautogui.hotkey('win', 'shift', 's')
        elif action_type == 'empty':
            speak(f"경고, {command_info.get('target_name')}을(를) 비우면 되돌릴 수 없습니다. 정말 실행하시겠습니까?")
            confirm = input("정말 실행하시겠습니까? (y/n): ")
            result = execute(final_command_key) if confirm.lower() == 'y' else "실행이 취소되었습니다."
        else:
            result = execute(final_command_key)


    if result:
        speak(result)
